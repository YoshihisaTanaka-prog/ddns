services:
  dns:
    build: ./.docker/dns
    volumes:
      - ./dns:/app
      - ./.docker/.root/dns:/root
    ports:
      - "0.0.0.0:53:53/tcp"
      - "0.0.0.0:53:53/udp"
      - "${ROUTER_OUTER_IP}:53535:53535"
    user: root
    command: /app/run.sh
    environment:
      INNER_IP: ${ROUTER_INNER_IP}
      OUTER_IP: ${ROUTER_OUTER_IP}
      LOCAL_DOMAIN_SUFFIX: ${LOCAL_DOMAIN_SUFFIX}
      NETWORK_IP: ${NETWORK_IP}
      SUBNET_MASK: ${SUBNET_MASK}
    depends_on:
      - rails

  dhcp:
    build: ./.docker/dhcp
    volumes:
      - ./dhcp:/app
      - ./.docker/.root/dhcp:/root
    network_mode: "host"
    user: root
    command: /app/run.sh
    environment:
      ROUTER_IP: ${ROUTER_INNER_IP}
      HOST_NAME: ${ROUTER_HOST_NAME}
      DOMAIN_SUFFIX: ${LOCAL_DOMAIN_SUFFIX}
      SOA_DATA: ${LOCAL_SOA}
      NETWORK_IP: ${NETWORK_IP}
      SUBNET_MASK: ${SUBNET_MASK}
    depends_on:
      - rails

  rails:
    build: ./.docker/rails
    volumes:
      - ./rails:/app
      - ./.docker/.root/rails:/root
    ports:
      - "127.0.0.1:3000:3000"
    user: root
    command: /app/run.sh
    depends_on:
      - db
    environment:
      RAILS_ENV: development
      LOCAL_SOA: ${LOCAL_SOA}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}

  db:
    image: postgres:15
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

volumes:
  db_data:
    driver: local
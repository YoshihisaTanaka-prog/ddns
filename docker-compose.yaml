services:
  dns:
    build: ./.docker/dns
    container_name: ddns-server-dns
    volumes:
      - ./dns:/app
      - ./.docker/.root/dns:/root
    ports:
      - "${ROUTER_INNER_IP}:5353:53"
      - "${ROUTER_OUTER_IP}:53535:53535"
    user: root
    command: /app/run.sh
    environment:
      INNER_IP: ${ROUTER_INNER_IP}
      OUTER_IP: ${ROUTER_OUTER_IP}
      LOCAL_DOMAIN_SUFFIX: ${LOCAL_DOMAIN_SUFFIX}
      NETWORK_IP: ${NETWORK_IP}
      SUBNET_MASK: ${SUBNET_MASK}
    networks:
      - internal_net
    depends_on:
      - rails

  dhcp:
    build: ./.docker/dhcp
    container_name: ddns-server-dhcp
    volumes:
      - ./dhcp:/app
      - ./.docker/.root/dhcp:/root
    ports:
      - "${ROUTER_INNER_IP}:6767:67"
      - "${ROUTER_INNER_IP}:6868:68"
    user: root
    command: /app/run.sh
    environment:
      ROUTER_IP: ${ROUTER_INNER_IP}
      NETWORK_IP: ${NETWORK_IP}
      SUBNET_MASK: ${SUBNET_MASK}
    networks:
      - internal_net
    depends_on:
      - rails

  rails:
    build: ./.docker/rails
    container_name: ddns-server-rails
    volumes:
      - ./rails:/app
      - ./.docker/.root/rails:/root
    user: root
    command: /app/run.sh
    networks:
      - internal_net
    depends_on:
      - db
    environment:
      RAILS_ENV: development
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}

  db:
    image: postgres:15
    container_name: ddns-server-db
    networks:
      - internal_net
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

networks:
  internal_net:
    driver: bridge
    # internal: true

volumes:
  db_data:
    driver: local
    name: ddns_db_data